/*
 * Copyright 2018 NotAnotherOne Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.jfrog.artifactory'

ext {
    bintrayRepo = 'atmotube'
    bintrayName = 'atmotube'
    bintrayOrg = 'notanotherone'

    publishedGroupId = 'com.atmotube.ble'
    libraryName = 'AtmotubeBLE'
    artifact = 'atmotube'

    libraryDescription = 'Atmotube BLE library'

    siteUrl = 'https://github.com/atmotube'
    gitUrl = 'https://github.com/atmotube/atmotube-android-ble'

    libraryVersion = '0.5.3'

    developerId = 'atmotech'
    developerName = 'Atmotech Inc.'
    developerEmail = 'info@atmotube.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

android {
    compileSdkVersion 30

    defaultConfig {
        minSdkVersion 18
        targetSdkVersion 30
        versionCode 53
        versionName "0.5.3"
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
def artifactory_contextUrl = properties.getProperty('artifactory_contextUrl')
def artifactory_user = properties.getProperty('artifactory_user')
def artifactory_password = properties.getProperty('artifactory_password')

artifactory {
    contextUrl = "${artifactory_contextUrl}"   //The base Artifactory URL if not overridden by the publisher/resolver
    publish {
        repository {
            repoKey = 'atmotech-gradle-release-local'
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true

        }
    }
    resolve {
        repository {
            repoKey = 'atmotech-gradle-release'
            username = "${artifactory_user}"
            password = "${artifactory_password}"
            maven = true
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'no.nordicsemi.android.support.v18:scanner:1.5.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

repositories {
    mavenCentral()
}

apply from: 'publish.gradle'
